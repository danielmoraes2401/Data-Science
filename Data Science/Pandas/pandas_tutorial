{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"pandas_tutorial","provenance":[],"toc_visible":true,"mount_file_id":"1Vbhhr59caQgR9ePN9ST-AFgrahhFwhy4","authorship_tag":"ABX9TyP1N0fUgUWxa9eUywopUX4k"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"HdkhU1uP4pt-"},"source":["# **Import library**"]},{"cell_type":"code","metadata":{"id":"U3mTUvkVedv-","executionInfo":{"status":"ok","timestamp":1622641598599,"user_tz":180,"elapsed":280,"user":{"displayName":"Daniel Moraes Costa Andrade","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg1VK9u5hLoInzO19ehSuioMBetEITorhC34NxEDw=s64","userId":"18123689211039767428"}}},"source":["import pandas as pd "],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CtaWEexLyPsU"},"source":["# **Conversion**"]},{"cell_type":"markdown","metadata":{"id":"mbkist7FjafF"},"source":["### Pandas para excel/csv/json/html"]},{"cell_type":"code","metadata":{"id":"QfHk-wsVfLe2"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/pokemon_data.csv')\n","df.to_csv('new_pokemon.csv',index=False)  # O que tiver no dataFrame vai pra csv\n","  #to_json('new_pokemon.json',index=False)\n","  #to_xlsx('new_pokemon.xlsx',index=False)\n","  #to_txt('new_pokemon.txt',index=False, sep='\\t')\n","  #to_html"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"b6ivc1LhuQD9"},"source":["## For in DF"]},{"cell_type":"code","metadata":{"id":"oBAs_rE5uPMc"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/pokemon_data.csv')\n","for index, linha in df.iterrows():\n","  #print(index, row) #printa todos os dados de todos os pokemons\n","  print(index, linha['Name']) #printa o indice e só o nome\n","\n","df.iterrows()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rLzhqMTalgWY"},"source":["### Dicionário -> DataFrame"]},{"cell_type":"code","metadata":{"id":"45OzzAuMlgG9"},"source":["weather_day = {\n","    \"day\": ['24/03/2020', '25/03/2020', '26/03/2020'],\n","    \"temperature\": [27, 34, 5],\n","    \"event\": ['rain', 'sunny', 'snow']\n","}\n","\n","df = pd.DataFrame(weather_day)\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5b2EHZuulpe7"},"source":["### Lista de Dicionários -> DataFrame"]},{"cell_type":"code","metadata":{"id":"NU_4dMB1lpTi"},"source":["weather_data = [\n","    {'day': '1/1/2017', 'temperature': 32, 'event': 'Rain'},\n","    {'day': '1/2/2017', 'temperature': 35, 'event': 'Sunny'},\n","    {'day': '1/3/2017', 'temperature': 28, 'event': 'Snow'},\n","    \n","]\n","df = pd.DataFrame(weather_data)\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Gz9n5BnFl_DO"},"source":["### Lista de Tuplas -> DataFrame"]},{"cell_type":"code","metadata":{"id":"nK5AAmPrl-6E"},"source":["weather_day = [\n","   ('24/03/2020', 27, 'rain'),\n","   ('25/03/2020', 34, 'sunny'),\n","   ('26/03/2020', 5, 'snow')\n","]\n","\n","df = pd.DataFrame(weather_day, columns=['day', 'temperature', 'event']) # tem  que colocar os labels, pq se não vai aparecer colunas numéricas\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"C9qR8LLbyKwF"},"source":["# **Information of the DataFrame**"]},{"cell_type":"markdown","metadata":{"id":"NVDcGOZXldIs"},"source":["### Shape of DF"]},{"cell_type":"code","metadata":{"id":"gFsitMwtk16z"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","row, columns = df.shape\n","print(df.shape)\n","print(f\"\"\"\n","Número de linhas: {row}\n","Número de colunas: {columns}\n","\"\"\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"j23NPh_fnRPz"},"source":["### Descripton of DF"]},{"cell_type":"code","metadata":{"id":"PxXgKg69mg3X"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.describe() #descrição completa do dataFrame"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rpao7EKNp1Hs"},"source":["### set_option (display.max_columns/rows)"]},{"cell_type":"code","metadata":{"id":"mtjh6FDGohC2"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","#pd.set_option('display.max_columns', 2) # nesse caso só vai aparecer no visor duas colunas\n","#pd.set_option('display.max_rows', 10) # nesse caso só vai aparecer no visor duas colunas\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jxLKnL2QqBDN"},"source":["### Fillna values"]},{"cell_type":"code","metadata":{"id":"OBWVBf7lqA17"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/pokemon_data.csv')\n","df.fillna(0, inplace=True) #se tiver algum valor Na, substitui por 0"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"yTu8l22OyGf9"},"source":["# **DataFrame basic**"]},{"cell_type":"markdown","metadata":{"id":"qTrHnL3Xk-R9"},"source":["### Printar o DataFrame"]},{"cell_type":"code","metadata":{"id":"uCK0Yunrgv4b"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/pokemon_data.csv') #aconselho ver todos os parametros do read_csv/DataFrame \n","    #pd.read_excel\n","    #pd.read_json\n","    #pd.read_csv('adada.txt', delimiter='\\t')\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kHZPfRVZnn7j"},"source":["#### Head/tail "]},{"cell_type":"code","metadata":{"id":"DBXbI6X-nl71"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.head() # printa a parte de cima\n","#df.tail() # printa a parte de baixo"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"crKCWgRfn3ul"},"source":["#### Print the df header"]},{"cell_type":"code","metadata":{"id":"QLJHTnX2n3f_"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","cols = list(df.columns.values) # lista das coluns\n","df.columns # lista (na verdade é um objeto) das colunas\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"05Rr3g2Bw8Mn"},"source":["## Change index of the DF"]},{"cell_type":"code","metadata":{"id":"-RJbXq7FnWmI"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0') #pode mudar direto chamando no pd.read_csv\n","df.set_index('Name', inplace=True) #transformando a coluna Name no index, inplace é para colocar como se fosse df = df.set_index('Name')\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Y9gJJTtMx8fn"},"source":["# **Column**"]},{"cell_type":"markdown","metadata":{"id":"hOOykrqUrK8B"},"source":["## Print any column"]},{"cell_type":"code","metadata":{"id":"SFZrrgWYnWwN"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['Name'] \n","#df.Name"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"G0eqdzDBr8aY"},"source":["## Print more than one column"]},{"cell_type":"code","metadata":{"id":"1wrVINWfr8PY"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df[['Name', 'Overall','Weight']] "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"y-10OQuxrroD"},"source":["## Select part of the column"]},{"cell_type":"code","metadata":{"id":"QMvWlGGbnWtz"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['Name'][0:10]\n","#df.Name[0:8]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RMIMLH81xfVH"},"source":["## values_counts() of especific column"]},{"cell_type":"code","metadata":{"id":"fLbqVGvtnWjp"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['Name'].value_counts() # conta quantas vezes aparece cada nome/valor na coluna tal"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xfUS73mJxrUY"},"source":["## Sort columns "]},{"cell_type":"code","metadata":{"id":"JE4vgk7KnWhn"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","\n","# info = (self, by, axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last', ignore_index=False)\n","\n","#df.sort_index(ascending=True, inplace=True) #ordena os index \n","\n","df.sort_values(by='Weight', ascending=False, inplace=True) #ordena automaticamente do maior pro menor ou ordem alfabetica\n","#df.sort_values(by=['Weight', 'Overall'], ascending=[True,False], inplace=True) ou usa só ascending=True para uma só ordem #ordenando por multiplos valores "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_gYd5cPEzHvy"},"source":["### Upper the columns"]},{"cell_type":"code","metadata":{"id":"DR6Gc3KyzHls"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.columns = [x.upper() for x in df.columns]\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"viitFOiczW1w"},"source":["### Apply on the columns"]},{"cell_type":"code","metadata":{"id":"tdQTtiTazS8U"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['Name'].apply(len) # pega os dados da coluna Name e aplica a funcao len (tamanho de cada nome)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kOzkPFwazlXB"},"source":["### Apply with function"]},{"cell_type":"code","metadata":{"id":"JAsYs0wNzlLX"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","\n","def aumentar_colunas(coluna):\n","  return coluna.upper()\n","\n","df['Name'] = df['Name'].apply(aumentar_colunas) #aplicando a funcao (nome maisculo em todas os valores da coluna Name) \n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xgqBI7Wez3fp"},"source":["### Apply with lambda"]},{"cell_type":"code","metadata":{"id":"DNFhtrOEz3KS"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['Name'] = df['Name'].apply(lambda x: x.upper()) #utilizando apply com lambda\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0pcRQO190K43"},"source":["### Change the str(value) on the df header"]},{"cell_type":"code","metadata":{"id":"C44JWuay0KvP"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.columns = df.columns.str.replace(' ', '_') #substituindo um caracter no cabeçalho\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jqsU8Esd0twb"},"source":["### Change something that u wanted on the specific column"]},{"cell_type":"code","metadata":{"id":"GWLlKDoN0tmR"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['Name'] = df['Name'].str.lower() # transformando todos valores da colunas 'Name' em minuscula\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Mcy-QTDI1H87"},"source":["### Rename a column"]},{"cell_type":"code","metadata":{"id":"Rbv6QI_20z8V"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.rename(columns = {'Name': 'Nome', \"Agility\": \"Agilidade\"}, inplace=True) #mudando o nome de um especifico cabeçalho\n","\n","df[['Nome','Agilidade']]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"E0aDYHtl1Juk"},"source":["### Create a new column"]},{"cell_type":"code","metadata":{"id":"MVf1a_8C0z5m"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['New Column'] = None # criou uma coluna vazia\n","df['New Column'] = df['Skill Moves'] + df['Weak Foot'] # coluna nova que é a soma de duas\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_kuwr_x-1OXb"},"source":["### Remove a columns"]},{"cell_type":"code","metadata":{"id":"BNGXyIMM0zzA"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.drop(columns=['Overall'], inplace=True) #removendo a coluna Overall\n","df\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zJYXi9Lc3HG_"},"source":["# **Row**"]},{"cell_type":"markdown","metadata":{"id":"qGD9pRvN33bz"},"source":["### Print a row by a condition"]},{"cell_type":"code","metadata":{"id":"zO3E-prP33No"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df[df['Name'] == 'Neymar Jr']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"MPvHfW4k4BVx"},"source":["### Print index row by condition"]},{"cell_type":"code","metadata":{"id":"YWAttaol4BCb"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df[df['Name'] == 'Neymar Jr'].index"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"g0LkhOPP3EuL"},"source":["### Remove Row"]},{"cell_type":"code","metadata":{"id":"I3WEk2Gv3B8d"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.drop(index=0, inplace=True) # excluindo a coluna de index 0\n","df.drop(index=df[df['Name'] == 'Neymar Jr'].index, inplace=True) # excluindo Neymar por uma condição\n","df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rP05hX263DFL"},"source":["### Create Row"]},{"cell_type":"code","metadata":{"id":"TR_jWwNW3Byo"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df = df.append({'Name': 'Daniel', 'Overall': 99},ignore_index=True) #adicionando uma row na ultima linha (ignore_index() se baseia no ultimo index)\n","df.tail()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TkBWb2KZyAr1"},"source":["# **Selection/Filter/Acess data**"]},{"cell_type":"markdown","metadata":{"id":"bwjbhUHwsdIm"},"source":["## Iloc"]},{"cell_type":"code","metadata":{"id":"5OGHHCpVnWq-"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.iloc[2,1] # printa o a coluna de indice 1, na row de indice 2\n","#df.iloc[2] # printa toda a linha 2\n","#df.iloc[:,1] # printa toda a coluna de indice 1\n","#df.iloc[[1, 4]] # printa todas as colunas das rows 1 e 4\n","#df.iloc[[1, 4],1] # printa apenas a coluna 1 das rows 1 e 4"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jUujnjjFvQeT"},"source":["## Loc"]},{"cell_type":"code","metadata":{"id":"89vFE_HcnWoI"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/pokemon_data.csv', index_col='Name')\n","df.loc['Bulbasaur', 'Type 1'] # o indice que tem Bulbasaur, ai ele printa o valor da coluna Type 1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JF4Y7QH1nWe-"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.loc[[2],['Name','Overall']] # localiza o index 2 e printa a coluna Name e Overall"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"p49-EWjv5nfw"},"source":["### Acess a specif data by a boll expression"]},{"cell_type":"code","metadata":{"id":"4vKpWVvGnWcY"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","part = df [(df['Weak Foot'] > 4) & (df['Overall'] >= 90)]\n","part"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Km_PtMk7FAup"},"source":["### Filtering"]},{"cell_type":"code","metadata":{"id":"5Aoibm0EnWah"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","filtro = (df['Weak Foot'] > 4) & (df['Overall'] >= 90)  #Verificando em forma de bool quais jogadores tem overall maior de 90 com perna ruim +=4 e adquirindo uma variavel\n","df.loc[filtro,['Name','Age']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6SUahdEbnWXq"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Noteb\n",",ooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","filt = df[['Name', 'Overall']][df['Agility'] == df['Agility'].max()] #filtrando só a row de maior Agilidade, mostrando só o Nome é a velocidade\n","filt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ShZ0oOuaID0K"},"source":["#### Filtering by List"]},{"cell_type":"code","metadata":{"id":"P6FH7EGynWVQ"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","jogadores = ['Casemiro','Robben','De Gea'] #lista de jogadores\n","filt = df['Name'].isin(jogadores) #variavel filtrando apenas os jogadores da lista\n","df.loc[filt]\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eyEj9DT0ICs7"},"source":["#### Filtering by String"]},{"cell_type":"code","metadata":{"id":"A4Wm7B_pnWTY"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","x = df.loc [df['Name'].str.contains('Mario')] # todas as rows que tem o nome Mario\n","x"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UPG9C_z3H_Cv"},"source":["#### Filtering by String"]},{"cell_type":"code","metadata":{"id":"IkdtImgqnWQo"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","x = df.loc[~df['Name'].str.contains('Mario')] # todas as rows que tem NÃO nome Mario\n","x"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jSHPb5PGIRlo"},"source":["# **Agregate Statistics**"]},{"cell_type":"markdown","metadata":{"id":"5wiKcwj4I2ly"},"source":["### Max/min()"]},{"cell_type":"code","metadata":{"id":"qS9WGlbanWOI"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df['Agility'].max() # retorna o maior valor de uma coluna"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Q4Y8ucRyJSW6"},"source":["### Groupby"]},{"cell_type":"code","metadata":{"id":"fUUP4-8ynWLu"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')\n","df.groupby(['Overall']).count() # agrupa por uma coluna e conta as quantidades\n","                      #.sum() #   agrupa por uma coluna e soma as quantidades\n","                      #.mean() #   agrupa por uma coluna e faz a media as quantidades"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2gsL0VO-nWET"},"source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Science/Pandas/fifa_data.csv', index_col='Unnamed: 0')"],"execution_count":null,"outputs":[]}]}